problem link : https://leetcode.com/problems/3sum/description/
solution link : https://leetcode.com/problems/3sum/submissions/1572802936
Solution :
import 'dart:collection';

class Solution {
  List<List<int>> threeSum(List<int> nums) {
    nums.sort();
    int n = nums.length;
    Set<List<int>> st = LinkedHashSet<List<int>>(
      equals: (a, b) => a[0] == b[0] && a[1] == b[1] && a[2] == b[2],
      hashCode: (a) => a[0].hashCode ^ a[1].hashCode ^ a[2].hashCode,
    );

    for (int i = 0; i < n - 2; i++) {
      int l = i + 1, r = n - 1;
      int target = -nums[i];

      while (l < r) {
        int sum = nums[l] + nums[r];
        if (sum == target) {
          st.add([nums[i], nums[l], nums[r]]);
          l++;
          r--;
        } else if (sum > target) {
          r--;
        } else {
          l++;
        }
      }
    }
    return st.toList();
  }
}
