Problem link : https://leetcode.com/problems/zero-array-transformation-ii/description/
solution link : https://leetcode.com/problems/zero-array-transformation-ii/submissions/1572903205

Solution:
import 'dart:math';
class Solution {
  bool possible(int k, List<int> nums, List<List<int>> queries) {
    List<int> vv = List.filled(nums.length, 0);
    
    for (int i = 0; i < k; i++) {
      int l = queries[i][0];
      int r = queries[i][1];
      int v = queries[i][2];
      
      vv[l] -= v;
      if (r + 1 < nums.length) {
        vv[r + 1] += v;
      }
    }
    
    for (int i = 1; i < nums.length; i++) {
      vv[i] += vv[i - 1];
    }
    
    List<int> ultimate = List.generate(nums.length, (i) => max(0, nums[i] + vv[i]));
    
    for (int u in ultimate) {
      if (u != 0) return false;
    }
    return true;
  }
  
  int minZeroArray(List<int> nums, List<List<int>> queries) {
    int lo = 0, hi = queries.length;
    int ans = -1;
    
    while (lo <= hi) {
      int md = (lo + hi) >> 1;
      if (possible(md, nums, queries)) {
        ans = md;
        hi = md - 1;
      } else {
        lo = md + 1;
      }
    }
    return ans;
  }
}
